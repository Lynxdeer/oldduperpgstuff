import:
    org.bukkit.entity.LivingEntity

function modifyMana(p: player, m: number):
	remove {_m} from {mana::%{_p}%}
	if {combatlog::%{_p}%} is set:
		send action bar "&e[God Apple: %( {gapcd::%{_p}%} + 0)%&e] &6[Combat: %{combatlog::%{_p}%}% &6seconds] &b[Mana | %{mana::%{_p}%}%/25⸎]" to {_p}
	else:
		send action bar "&b[Mana | %{mana::%{_p}%}%/25⸎]" to {_p}

function cancelDmgTicks(e: entity):
	{_e}.setNoDamageTicks(0)
	wait 1 tick
	{_e}.setNoDamageTicks(0)
	
function setDmgTicks(e: entity, n: number):
	{_e}.setNoDamageTicks({_n})
	wait 1 tick
	{_e}.setNoDamageTicks({_n})
	
function invert(n: number) :: number:
	if {_n} does not start with "-":
		set {_n} to "-%{_n}%"
		return {_n} parsed as number
		stop
	return abs({_n})
	
function damageTicks(e: entity):
	{_e} is not a painting or boat or regular minecart or item frame or dropped item or end crystal or fireball or small fireball or dragon fireball or arrow or armor stand
	{_e} is not a boat or experience bottle or egg or snowball or firework rocket or firework or end crystal
	"%{_e}%" does not contain "dropped"
	wait 2 ticks
	{_e}.setNoDamageTicks(5)

function calculateArmor(d: number, e: entity, a: entity) :: integer:
# d = damage, e = victim, a = damager
	damageTicks({_e})
	if {_e} is not a player:
		damage {_e} by {_d}
		stop
	if {_e}'s time played is less than 5 minutes:
		stop
	if {_e}'s world is "ul_rpg":
		stop
	if {_e}'s gamemode is survival:
		{_e}'s world is not "ul_rpg"
		"%region at {_e}%" does not contain "spawn"
		{_e} is not {_a}
		set {combatlog::%{_e}%} to 10
		set {combatlog::%{_a}%} to 10 
	set {_armor} to 1
	
	if helmet of {_e} is netherite helmet or diamond helmet:
		add 0.15 to {_armor}
	if chestplate of {_e} is netherite chestplate or diamond chestplate:
		add 0.4 to {_armor}
	if leggings of {_e} is netherite leggings or diamond leggings:
		add 0.3 to {_armor}
	if boots of {_e} is netherite boots or diamond boots:
		add 0.15 to {_armor}
	

	set {_prot} to level of protection of {_e}'s helmet
	set {_prot} to {_prot} + level of protection of {_e}'s chestplate
	set {_prot} to {_prot} + level of protection of {_e}'s leggings
	set {_prot} to {_prot} + level of protection of {_e}'s boots

	set {_prot} to {_prot} * 12.5
	set {_prot} to round({_prot} / 200)

	#                          broadcast "&8%{_armor}%&8 | %{_prot}%"
	set {_fp} to ({_armor} + {_prot})
	set {_dmg} to ({_d} / {_fp})
	if {_dmg} is infinity value:
		set {_dmg} to 1
	if {_dmg} is more than 9.9:
		set {_dmg} to 9

	#                           broadcast "&7(%{_d}%&7, %{_dmg}%) &cDmg: %({_d} / {_dmg})%"
	damage {_e} by 0.001
	set {_e}'s health to ({_e}'s health - {_dmg})
	{_e} is not alive
	{_a} is not {_e}
	{_a} is a player
	{-nd::%{_e}%} is not true
	justDied({_e})
	set {_attuuid} to {_a}'s uuid
	add 1000 to {bal::%{_attuuid}%}
	send "&aYou recieved $1000 for out-magicking %{_e}%&a!" to {_a}
	broadcast "&c%{_e}% &fwas magicked by &c%{_a}%&f."
	return {_dmg}
	
	
function justDied(e: entity):
	set {-nd::%{_e}%} to true
	wait 5 ticks
	delete {-nd::%{_e}%}
	
	
	
	